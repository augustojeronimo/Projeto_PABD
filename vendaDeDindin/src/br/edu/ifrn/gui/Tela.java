/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifrn.gui;

import br.edu.ifrn.banco.AcessoBD;
import br.edu.ifrn.dominio.Dindin;
import br.edu.ifrn.dominio.DindinVendido;
import br.edu.ifrn.dominio.Venda;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;


public class Tela extends javax.swing.JFrame {
    
    private AcessoBD acesso;
    private Venda venda;
    

    DefaultTableModel modelo_dindinsSelecionados;
    DefaultTableModel modelo_dindinsEstoque;
    DefaultTableModel modelo_historicoVendas;
    
    
    public Tela() {
        initComponents();
        acesso = new AcessoBD();
        
        modelo_dindinsSelecionados = (DefaultTableModel) tabelaVenda_dindinsSelecionados.getModel();
        modelo_dindinsEstoque = (DefaultTableModel) tabelaEstoque_estoqueDindins.getModel();
        modelo_historicoVendas = (DefaultTableModel) tabelaHistorico_historicoVendas.getModel();
        
        preencherComboVenda();

        resetVenda();
        
        setPainelVisivel(painel_fundo, painel_venda);
        
    }

    /* -/-/-/-/-/-/-/-/-/-/- Métodos para controle da interface gráfica -/-/-/-/-/-/-/-/-/-/- */
    
    private void setPainelVisivel(javax.swing.JPanel pai, javax.swing.JPanel filho) {
        Component[] content = pai.getComponents();
        
        if (pai.isAncestorOf(filho)) {
            for (Component c : content) {
                c.setVisible(false);
            }

            filho.setVisible(true);
        }
    }
    
    
    private void mensagem(int mensagem) {
        switch (mensagem) {
            
            case AcessoBD.OPERACAO_CONCLUIDA:
                JOptionPane.showMessageDialog(this, "Operação realizada com sucesso");
                break;    
            case AcessoBD.ERRO_DRIVER:
                JOptionPane.showMessageDialog(this, "Houve um erro no driver\nnão foi possível realizar a venda");
                break;    
            case AcessoBD.ERRO_CONECTAR:
                JOptionPane.showMessageDialog(this, "Houve um erro na conexão\nnão foi possível realizar a venda");
                break;
            case AcessoBD.ERRO_SINTAXE:
                JOptionPane.showMessageDialog(this, "Houve um erro de sintaxe\nverifique os dados e tente novamente");
                break;
            default:
                break;
        }
    }
    
    /* -=-=-=-=- Métodos da tela de venda -=-=-=-=- */
    
    private void atualizarTotalVenda() {
        String total = String.format("Total: %.02f", venda.getValorTotal());
        labelVenda_valorTotal.setText(total);
        
        SpinnerModel model = new SpinnerNumberModel(0, 0, venda.getValorTotal(), 0.05);
        spinnerVenda_desconto.setModel(model);
    }
    
    
    /* -=-=-=-=- Métodos da tela de estoque -=-=-=-=- */
    
    private void limparFormEstoque() {
        campoEstoque_sabor.setText("");
        spinnerEstoque_custo.setValue(1);
        spinnerEstoque_valor.setValue(1);
        spinnerEstoque_quantidade.setValue(1);
        
        tabelaEstoque_estoqueDindins.clearSelection();
    }
    
    
    /* -=-=-=-=- Métodos da tela de histórico -=-=-=-=- */
    
    
    
    
    /* -/-/-/-/-/-/-/-/-/-/- Código gerado automaticamente pela IDE -/-/-/-/-/-/-/-/-/-/- */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel_fundo = new javax.swing.JPanel();
        painel_venda = new javax.swing.JPanel();
        painel_formSaborVenda = new javax.swing.JPanel();
        botaoVenda_removerDindin = new javax.swing.JButton();
        botaoVenda_adicionarDindin = new javax.swing.JButton();
        spinnerVenda_quantidadeSabor = new javax.swing.JSpinner();
        comboVenda_saborDindin = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaVenda_dindinsSelecionados = new javax.swing.JTable();
        labelVenda_valorTotal = new javax.swing.JLabel();
        botaoVenda_executarVenda = new javax.swing.JButton();
        botaoVenda_cancelarVenda = new javax.swing.JButton();
        spinnerVenda_desconto = new javax.swing.JSpinner();
        painel_estoque = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaEstoque_estoqueDindins = new javax.swing.JTable();
        painel_formDindin = new javax.swing.JPanel();
        campoEstoque_sabor = new javax.swing.JTextField();
        spinnerEstoque_valor = new javax.swing.JSpinner();
        spinnerEstoque_custo = new javax.swing.JSpinner();
        spinnerEstoque_quantidade = new javax.swing.JSpinner();
        botaoEstoque_limparFormDindin = new javax.swing.JButton();
        painel_botoesDindin = new javax.swing.JPanel();
        botaoEstoque_cadastrarDindin = new javax.swing.JButton();
        botaoEstoque_atualizarDindin = new javax.swing.JButton();
        botaoEstoque_removerDindin = new javax.swing.JButton();
        botaoEstoque_consultarDindins = new javax.swing.JButton();
        painel_historico = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaHistorico_historicoVendas = new javax.swing.JTable();
        painel_botoesHistorico = new javax.swing.JPanel();
        botaoHistorico_restaurarVenda = new javax.swing.JButton();
        botaoHistorico_indeferirVenda = new javax.swing.JButton();
        botaoHistorico_gerarRelatorio = new javax.swing.JButton();
        botaoEstoque_consultarDindins2 = new javax.swing.JButton();
        menuBarra = new javax.swing.JMenuBar();
        menu_telas = new javax.swing.JMenu();
        itemMenu_venda = new javax.swing.JMenuItem();
        itemMenu_estoque = new javax.swing.JMenuItem();
        itemMenu_historico = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciamento de dindins");
        setIconImages(null);

        painel_fundo.setLayout(new java.awt.CardLayout());

        painel_venda.setBackground(new java.awt.Color(255, 255, 255));
        painel_venda.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Venda", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        botaoVenda_removerDindin.setText("Remover");
        botaoVenda_removerDindin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoVenda_removerDindin.setEnabled(false);
        botaoVenda_removerDindin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVenda_removerDindinActionPerformed(evt);
            }
        });

        botaoVenda_adicionarDindin.setText("Adicionar");
        botaoVenda_adicionarDindin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoVenda_adicionarDindin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVenda_adicionarDindinActionPerformed(evt);
            }
        });

        spinnerVenda_quantidadeSabor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerVenda_quantidadeSabor.setModel(new javax.swing.SpinnerNumberModel(1, 1, 1, 1));
        spinnerVenda_quantidadeSabor.setToolTipText("Quantidade do sabor definido");

        comboVenda_saborDindin.setToolTipText("Sabor do dindin");
        comboVenda_saborDindin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboVenda_saborDindin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboVenda_saborDindinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_formSaborVendaLayout = new javax.swing.GroupLayout(painel_formSaborVenda);
        painel_formSaborVenda.setLayout(painel_formSaborVendaLayout);
        painel_formSaborVendaLayout.setHorizontalGroup(
            painel_formSaborVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_formSaborVendaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboVenda_saborDindin, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(spinnerVenda_quantidadeSabor, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(botaoVenda_adicionarDindin)
                .addGap(18, 18, 18)
                .addComponent(botaoVenda_removerDindin)
                .addContainerGap())
        );
        painel_formSaborVendaLayout.setVerticalGroup(
            painel_formSaborVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_formSaborVendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_formSaborVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboVenda_saborDindin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerVenda_quantidadeSabor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoVenda_adicionarDindin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoVenda_removerDindin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dindins selecionados"));

        tabelaVenda_dindinsSelecionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sabor", "Quantidade", "Valor Un.", "Valor Tot."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaVenda_dindinsSelecionados.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tabelaVenda_dindinsSelecionados.setSelectionBackground(new java.awt.Color(102, 153, 255));
        tabelaVenda_dindinsSelecionados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaVenda_dindinsSelecionados.setShowVerticalLines(false);
        tabelaVenda_dindinsSelecionados.getTableHeader().setReorderingAllowed(false);
        tabelaVenda_dindinsSelecionados.getTableHeader().setBorder(new LineBorder(Color.BLACK, 1));
        tabelaVenda_dindinsSelecionados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabelaVenda_dindinsSelecionadosFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaVenda_dindinsSelecionados);

        labelVenda_valorTotal.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        labelVenda_valorTotal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelVenda_valorTotal.setText("Total:");

        botaoVenda_executarVenda.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        botaoVenda_executarVenda.setText("Executar venda");
        botaoVenda_executarVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoVenda_executarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVenda_executarVendaActionPerformed(evt);
            }
        });

        botaoVenda_cancelarVenda.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        botaoVenda_cancelarVenda.setText("Cancelar venda");
        botaoVenda_cancelarVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoVenda_cancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVenda_cancelarVendaActionPerformed(evt);
            }
        });

        spinnerVenda_desconto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerVenda_desconto.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 99.99d, 0.05d));
        spinnerVenda_desconto.setBorder(javax.swing.BorderFactory.createTitledBorder("Desconto"));

        javax.swing.GroupLayout painel_vendaLayout = new javax.swing.GroupLayout(painel_venda);
        painel_venda.setLayout(painel_vendaLayout);
        painel_vendaLayout.setHorizontalGroup(
            painel_vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_vendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painel_formSaborVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(painel_vendaLayout.createSequentialGroup()
                        .addComponent(labelVenda_valorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinnerVenda_desconto, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(botaoVenda_cancelarVenda)
                        .addGap(18, 18, 18)
                        .addComponent(botaoVenda_executarVenda)))
                .addContainerGap())
        );
        painel_vendaLayout.setVerticalGroup(
            painel_vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_vendaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel_formSaborVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(painel_vendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoVenda_cancelarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoVenda_executarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerVenda_desconto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelVenda_valorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        painel_fundo.add(painel_venda, "card2");

        painel_estoque.setBackground(new java.awt.Color(255, 255, 255));
        painel_estoque.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estoque", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        painel_estoque.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dindins em estoque"));

        tabelaEstoque_estoqueDindins.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sabor", "Custo", "Valor", "Quant. em estoque"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaEstoque_estoqueDindins.setSelectionBackground(new java.awt.Color(102, 153, 255));
        tabelaEstoque_estoqueDindins.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaEstoque_estoqueDindins.getTableHeader().setReorderingAllowed(false);
        tabelaEstoque_estoqueDindins.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaEstoque_estoqueDindinsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaEstoque_estoqueDindins);

        campoEstoque_sabor.setBorder(javax.swing.BorderFactory.createTitledBorder("Sabor"));

        spinnerEstoque_valor.setModel(new javax.swing.SpinnerNumberModel(1.0d, 0.5d, 99.99d, 0.25d));
        spinnerEstoque_valor.setBorder(javax.swing.BorderFactory.createTitledBorder("Valor"));

        spinnerEstoque_custo.setModel(new javax.swing.SpinnerNumberModel(1.0d, 0.01d, 99.99d, 0.01d));
        spinnerEstoque_custo.setBorder(javax.swing.BorderFactory.createTitledBorder("Custo"));

        spinnerEstoque_quantidade.setModel(new javax.swing.SpinnerNumberModel(1, 0, null, 1));
        spinnerEstoque_quantidade.setBorder(javax.swing.BorderFactory.createTitledBorder("Quantidade"));

        botaoEstoque_limparFormDindin.setText("Limpar campos");
        botaoEstoque_limparFormDindin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoEstoque_limparFormDindin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEstoque_limparFormDindinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_formDindinLayout = new javax.swing.GroupLayout(painel_formDindin);
        painel_formDindin.setLayout(painel_formDindinLayout);
        painel_formDindinLayout.setHorizontalGroup(
            painel_formDindinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_formDindinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_formDindinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_formDindinLayout.createSequentialGroup()
                        .addComponent(campoEstoque_sabor)
                        .addGap(18, 18, 18)
                        .addComponent(spinnerEstoque_custo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinnerEstoque_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinnerEstoque_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_formDindinLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botaoEstoque_limparFormDindin)))
                .addContainerGap())
        );
        painel_formDindinLayout.setVerticalGroup(
            painel_formDindinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_formDindinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_formDindinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoEstoque_sabor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerEstoque_valor)
                    .addComponent(spinnerEstoque_custo)
                    .addComponent(spinnerEstoque_quantidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoEstoque_limparFormDindin)
                .addContainerGap())
        );

        botaoEstoque_cadastrarDindin.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        botaoEstoque_cadastrarDindin.setText("Cadastrar");
        botaoEstoque_cadastrarDindin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoEstoque_cadastrarDindin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEstoque_cadastrarDindinActionPerformed(evt);
            }
        });

        botaoEstoque_atualizarDindin.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        botaoEstoque_atualizarDindin.setText("Atualizar");
        botaoEstoque_atualizarDindin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoEstoque_atualizarDindin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEstoque_atualizarDindinActionPerformed(evt);
            }
        });

        botaoEstoque_removerDindin.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        botaoEstoque_removerDindin.setText("Remover");
        botaoEstoque_removerDindin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoEstoque_removerDindin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEstoque_removerDindinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_botoesDindinLayout = new javax.swing.GroupLayout(painel_botoesDindin);
        painel_botoesDindin.setLayout(painel_botoesDindinLayout);
        painel_botoesDindinLayout.setHorizontalGroup(
            painel_botoesDindinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_botoesDindinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoEstoque_cadastrarDindin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 42, Short.MAX_VALUE)
                .addComponent(botaoEstoque_atualizarDindin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 43, Short.MAX_VALUE)
                .addComponent(botaoEstoque_removerDindin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        painel_botoesDindinLayout.setVerticalGroup(
            painel_botoesDindinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_botoesDindinLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painel_botoesDindinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoEstoque_cadastrarDindin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoEstoque_atualizarDindin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoEstoque_removerDindin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botaoEstoque_consultarDindins.setText("recarregar dados");
        botaoEstoque_consultarDindins.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoEstoque_consultarDindins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEstoque_consultarDindinsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_estoqueLayout = new javax.swing.GroupLayout(painel_estoque);
        painel_estoque.setLayout(painel_estoqueLayout);
        painel_estoqueLayout.setHorizontalGroup(
            painel_estoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_estoqueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_estoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botaoEstoque_consultarDindins)
                    .addComponent(painel_formDindin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painel_botoesDindin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        painel_estoqueLayout.setVerticalGroup(
            painel_estoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_estoqueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel_formDindin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoEstoque_consultarDindins)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painel_botoesDindin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        painel_fundo.add(painel_estoque, "card3");

        painel_historico.setBackground(new java.awt.Color(255, 255, 255));
        painel_historico.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Histórico de vendas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Histórico de vendas"));

        tabelaHistorico_historicoVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID ", "Sabores vendidos", "Valor total", "Desconto", "Data", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaHistorico_historicoVendas.setSelectionBackground(new java.awt.Color(102, 153, 255));
        tabelaHistorico_historicoVendas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaHistorico_historicoVendas.getTableHeader().setReorderingAllowed(false);
        tabelaHistorico_historicoVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaHistorico_historicoVendasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaHistorico_historicoVendas);

        botaoHistorico_restaurarVenda.setText("Restaurar venda");
        botaoHistorico_restaurarVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoHistorico_restaurarVenda.setEnabled(false);
        botaoHistorico_restaurarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoHistorico_restaurarVendaActionPerformed(evt);
            }
        });

        botaoHistorico_indeferirVenda.setText("Indeferir venda");
        botaoHistorico_indeferirVenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoHistorico_indeferirVenda.setEnabled(false);
        botaoHistorico_indeferirVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoHistorico_indeferirVendaActionPerformed(evt);
            }
        });

        botaoHistorico_gerarRelatorio.setText("Gerar relatório");
        botaoHistorico_gerarRelatorio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout painel_botoesHistoricoLayout = new javax.swing.GroupLayout(painel_botoesHistorico);
        painel_botoesHistorico.setLayout(painel_botoesHistoricoLayout);
        painel_botoesHistoricoLayout.setHorizontalGroup(
            painel_botoesHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_botoesHistoricoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoHistorico_gerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                .addComponent(botaoHistorico_indeferirVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoHistorico_restaurarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        painel_botoesHistoricoLayout.setVerticalGroup(
            painel_botoesHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_botoesHistoricoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_botoesHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoHistorico_restaurarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoHistorico_indeferirVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoHistorico_gerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        botaoEstoque_consultarDindins2.setText("recarregar dados");
        botaoEstoque_consultarDindins2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botaoEstoque_consultarDindins2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEstoque_consultarDindins2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_historicoLayout = new javax.swing.GroupLayout(painel_historico);
        painel_historico.setLayout(painel_historicoLayout);
        painel_historicoLayout.setHorizontalGroup(
            painel_historicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_historicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_historicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                    .addComponent(painel_botoesHistorico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_historicoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botaoEstoque_consultarDindins2)))
                .addContainerGap())
        );
        painel_historicoLayout.setVerticalGroup(
            painel_historicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_historicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoEstoque_consultarDindins2)
                .addGap(25, 25, 25)
                .addComponent(painel_botoesHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        painel_fundo.add(painel_historico, "card4");

        menu_telas.setText("Telas");

        itemMenu_venda.setText("Venda");
        itemMenu_venda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenu_vendaActionPerformed(evt);
            }
        });
        menu_telas.add(itemMenu_venda);

        itemMenu_estoque.setText("Estoque");
        itemMenu_estoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenu_estoqueActionPerformed(evt);
            }
        });
        menu_telas.add(itemMenu_estoque);

        itemMenu_historico.setText("Histórico");
        itemMenu_historico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenu_historicoActionPerformed(evt);
            }
        });
        menu_telas.add(itemMenu_historico);

        menuBarra.add(menu_telas);

        setJMenuBar(menuBarra);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel_fundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel_fundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /* -/-/-/-/-/-/-/-/-/-/- Métodos de ação dos elementos -/-/-/-/-/-/-/-/-/-/- */
    
    private void itemMenu_vendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenu_vendaActionPerformed
        resetVenda();
        setPainelVisivel(painel_fundo, painel_venda);
    }//GEN-LAST:event_itemMenu_vendaActionPerformed

    private void itemMenu_estoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenu_estoqueActionPerformed
        setPainelVisivel(painel_fundo, painel_estoque);
        atualizarTabelaEstoque();
    }//GEN-LAST:event_itemMenu_estoqueActionPerformed

    private void itemMenu_historicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenu_historicoActionPerformed
        setPainelVisivel(painel_fundo, painel_historico);
        atualizarTabelaHistorico();
    }//GEN-LAST:event_itemMenu_historicoActionPerformed

    private void botaoVenda_executarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVenda_executarVendaActionPerformed
        if (venda.getDindinsVendidos().size() > 0) {
            long data = new java.util.Date().getTime();
            venda.setDataVenda(new java.sql.Date(data));

            venda.setDesconto((double) spinnerVenda_desconto.getValue());
            
            mensagem(acesso.insertVenda(venda));
            
            resetVenda();
        } else {
            JOptionPane.showMessageDialog(null, "Lista vazia, venda negada!");
        }
    }//GEN-LAST:event_botaoVenda_executarVendaActionPerformed

    private void botaoVenda_adicionarDindinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVenda_adicionarDindinActionPerformed
        String sabor = (String) comboVenda_saborDindin.getSelectedItem();
        int quantidade = (int) spinnerVenda_quantidadeSabor.getValue();

        if (sabor == null) {
            JOptionPane.showMessageDialog(this, "Lista de sabores vazia!");
            return;
        }
        
        Dindin d = acesso.selectDindin(sabor);
        
        DindinVendido dv = new DindinVendido(d, quantidade);
        
        venda.addDindinVendido(dv);
        
        modelo_dindinsSelecionados.addRow(new Object[]{
            d.getSabor(),
            quantidade,
            d.getValor(),
            d.getValor()*quantidade
        });
        
        comboVenda_saborDindin.removeItem(sabor);
        
        atualizarTotalVenda();
    }//GEN-LAST:event_botaoVenda_adicionarDindinActionPerformed

    private void comboVenda_saborDindinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboVenda_saborDindinActionPerformed
        String sabor = String.valueOf(comboVenda_saborDindin.getSelectedItem());
        
        if (comboVenda_saborDindin.getSelectedItem() == null) {
            
            botaoVenda_adicionarDindin.setEnabled(false);
            spinnerVenda_quantidadeSabor.setValue(0);
            
        } else {
            Dindin d = acesso.selectDindin(sabor);
        
            SpinnerModel model = new SpinnerNumberModel(1, 1, d.getQuantidadeEstoque(), 1);

            spinnerVenda_quantidadeSabor.setModel(model);
        }
    }//GEN-LAST:event_comboVenda_saborDindinActionPerformed

    private void botaoVenda_removerDindinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVenda_removerDindinActionPerformed
        // captura a linha selecionada na tabela
        int linha = tabelaVenda_dindinsSelecionados.getSelectedRow();
        
        // se houver linha selecionada
        if (linha >= 0) {
            // captura o sabor referenciado na linha
            String sabor =(String) tabelaVenda_dindinsSelecionados.getValueAt(linha, 0);
            //adiciona esse sabor de volta como escolha
            comboVenda_saborDindin.addItem(sabor);
            
            Dindin d = acesso.selectDindin(sabor);
            int quantidade = (int) modelo_dindinsSelecionados.getValueAt(linha, 1);
            
            DindinVendido dv = new DindinVendido(d, quantidade);
            
            venda.removerDindinVendido(dv);
            
            modelo_dindinsSelecionados.removeRow(linha);
            
            atualizarTotalVenda();

            botaoVenda_removerDindin.setEnabled(false);
            botaoVenda_adicionarDindin.setEnabled(true);
        }
    }//GEN-LAST:event_botaoVenda_removerDindinActionPerformed

    private void tabelaVenda_dindinsSelecionadosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaVenda_dindinsSelecionadosFocusGained
        botaoVenda_removerDindin.setEnabled(true);
    }//GEN-LAST:event_tabelaVenda_dindinsSelecionadosFocusGained

    private void botaoVenda_cancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVenda_cancelarVendaActionPerformed
        resetVenda();
    }//GEN-LAST:event_botaoVenda_cancelarVendaActionPerformed

    private void botaoEstoque_cadastrarDindinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEstoque_cadastrarDindinActionPerformed
        String sabor = campoEstoque_sabor.getText().toLowerCase();
        double custo = (double) spinnerEstoque_custo.getValue();
        double valor = (double) spinnerEstoque_valor.getValue();
        int quantidadeEstoque = (int) spinnerEstoque_quantidade.getValue();
        
        Dindin d = new Dindin(sabor, custo, valor, quantidadeEstoque);
        
        mensagem(acesso.InsertDindin(d));
        
        atualizarTabelaEstoque();
        limparFormEstoque();
    }//GEN-LAST:event_botaoEstoque_cadastrarDindinActionPerformed

    private void botaoEstoque_atualizarDindinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEstoque_atualizarDindinActionPerformed
        String sabor = campoEstoque_sabor.getText();
        double custo = (double) spinnerEstoque_custo.getValue();
        double valor = (double) spinnerEstoque_valor.getValue();
        int quantidadeEstoque = (int) spinnerEstoque_quantidade.getValue();
        
        Dindin d = new Dindin(sabor, custo, valor, quantidadeEstoque);
        
        mensagem(acesso.updateDindin(d));
        
        atualizarTabelaEstoque();
    }//GEN-LAST:event_botaoEstoque_atualizarDindinActionPerformed

    private void botaoEstoque_removerDindinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEstoque_removerDindinActionPerformed
        String sabor = campoEstoque_sabor.getText();
        
        Dindin d = new Dindin(sabor);
        
        mensagem(acesso.deleteDindin(d));
        
        atualizarTabelaEstoque();
    }//GEN-LAST:event_botaoEstoque_removerDindinActionPerformed

    private void botaoEstoque_consultarDindinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEstoque_consultarDindinsActionPerformed
        atualizarTabelaEstoque();
    }//GEN-LAST:event_botaoEstoque_consultarDindinsActionPerformed

    private void botaoEstoque_limparFormDindinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEstoque_limparFormDindinActionPerformed
        limparFormEstoque();
    }//GEN-LAST:event_botaoEstoque_limparFormDindinActionPerformed

    private void tabelaEstoque_estoqueDindinsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaEstoque_estoqueDindinsMouseClicked
        int linha = tabelaEstoque_estoqueDindins.getSelectedRow();
        
        if (linha >= 0 && evt.getButton() == MouseEvent.BUTTON1) {
            String sabor = (String) tabelaEstoque_estoqueDindins.getValueAt(linha, 0);
            double custo = (double) tabelaEstoque_estoqueDindins.getValueAt(linha, 1);
            double valor = (double) tabelaEstoque_estoqueDindins.getValueAt(linha, 2);
            int quantidade = (int) tabelaEstoque_estoqueDindins.getValueAt(linha, 3);
            
            campoEstoque_sabor.setText(sabor);
            spinnerEstoque_custo.setValue(custo);
            spinnerEstoque_valor.setValue(valor);
            spinnerEstoque_quantidade.setValue(quantidade);
        }
    }//GEN-LAST:event_tabelaEstoque_estoqueDindinsMouseClicked

    private void botaoEstoque_consultarDindins2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEstoque_consultarDindins2ActionPerformed
        atualizarTabelaHistorico();
    }//GEN-LAST:event_botaoEstoque_consultarDindins2ActionPerformed

    private void botaoHistorico_restaurarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoHistorico_restaurarVendaActionPerformed
        int linha = tabelaHistorico_historicoVendas.getSelectedRow();
        
        if (linha >= 0) {
            int idVenda = (int) modelo_historicoVendas.getValueAt(linha, 0);
            String estado = "operante";
            
            mensagem(acesso.updateEstadoVenda(idVenda, estado));
            
            atualizarTabelaHistorico();
        } else {
            JOptionPane.showMessageDialog(this, "Escolha uma venda para realizar essa operação!");
        }
    }//GEN-LAST:event_botaoHistorico_restaurarVendaActionPerformed

    private void tabelaHistorico_historicoVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaHistorico_historicoVendasMouseClicked
        int linha = tabelaHistorico_historicoVendas.getSelectedRow();
        
        if (evt.getButton() == MouseEvent.BUTTON1 && linha >= 0) {
            
            String estado = (String) modelo_historicoVendas.getValueAt(linha, 5);
            
            switch(estado) {
                case "operante":
                    botaoHistorico_indeferirVenda.setEnabled(true);
                    botaoHistorico_restaurarVenda.setEnabled(false);
                    break;
                case "indeferida":
                    botaoHistorico_indeferirVenda.setEnabled(false);
                    botaoHistorico_restaurarVenda.setEnabled(true);
                    break;
            }
            
        }
    }//GEN-LAST:event_tabelaHistorico_historicoVendasMouseClicked

    private void botaoHistorico_indeferirVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoHistorico_indeferirVendaActionPerformed
        int linha = tabelaHistorico_historicoVendas.getSelectedRow();
        
        if (linha >= 0) {
            int idVenda = (int) modelo_historicoVendas.getValueAt(linha, 0);
            String estado = "indeferida";
            
            mensagem(acesso.updateEstadoVenda(idVenda, estado));
            
            atualizarTabelaHistorico();
        } else {
            JOptionPane.showMessageDialog(this, "Escolha uma venda para realizar essa operação!");
        }
    }//GEN-LAST:event_botaoHistorico_indeferirVendaActionPerformed

    /* -/-/-/-/-/-/-/-/-/-/- Métodos relacionados ao banco de dados -/-/-/-/-/-/-/-/-/-/- */
    
    /* -=-=-=-=- Métodos da tela de venda -=-=-=-=- */
    private void preencherComboVenda() {
        ArrayList<Dindin> lista = acesso.selectDindins();
        
        comboVenda_saborDindin.removeAllItems();
        
        for (Dindin d : lista) {
            if (d.getQuantidadeEstoque() > 0) {
                comboVenda_saborDindin.addItem(d.getSabor());
            }
        }
    }
    
    private void resetVenda() {
        modelo_dindinsSelecionados.setNumRows(0);
        
        preencherComboVenda();
        
        botaoVenda_adicionarDindin.setEnabled(true);
        botaoVenda_removerDindin.setEnabled(false);
        
        venda = new Venda();
        
        atualizarTotalVenda();
        spinnerVenda_desconto.setValue(0);
    }
    
    /* -=-=-=-=- Métodos da tela de estoque -=-=-=-=- */
    
    private void atualizarTabelaEstoque() {
        modelo_dindinsEstoque.setNumRows(0);
        
        ArrayList<Dindin> lista = acesso.selectDindins();
        
        if (lista == null) {
            JOptionPane.showMessageDialog(this, "Houve um erro ao consultar o estoque");
        } else {
            lista.forEach((d) -> {
                modelo_dindinsEstoque.addRow(new Object[]{
                    d.getSabor(),
                    d.getCusto(),
                    d.getValor(),
                    d.getQuantidadeEstoque()
                });
            });
        }
    }
    
    /* -=-=-=-=- Métodos da tela de histórico -=-=-=-=- */
    
    private void atualizarTabelaHistorico() {
        ArrayList<Venda> lista = acesso.selectVendas();

        modelo_historicoVendas.setNumRows(0);
        botaoHistorico_indeferirVenda.setEnabled(false);
        botaoHistorico_restaurarVenda.setEnabled(false);
        
        if (lista == null) {
            JOptionPane.showMessageDialog(this, "Houve um erro ao consultar o histórico");
        } else {
            for (Venda v : lista) {

                modelo_historicoVendas.addRow(new Object[]{
                    v.getIdVenda(),
                    v.getSaboresVendidosToString(),
                    v.getValorTotal(),
                    v.getDesconto(),
                    v.getDataVenda(),
                    v.getEstado()
                });
            }
        }
    }
    
    /* -/-/-/-/-/-/- Método principal e declaração dos elementos da interface -/-/-/-/-/-/- */
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoEstoque_atualizarDindin;
    private javax.swing.JButton botaoEstoque_cadastrarDindin;
    private javax.swing.JButton botaoEstoque_consultarDindins;
    private javax.swing.JButton botaoEstoque_consultarDindins2;
    private javax.swing.JButton botaoEstoque_limparFormDindin;
    private javax.swing.JButton botaoEstoque_removerDindin;
    private javax.swing.JButton botaoHistorico_gerarRelatorio;
    private javax.swing.JButton botaoHistorico_indeferirVenda;
    private javax.swing.JButton botaoHistorico_restaurarVenda;
    private javax.swing.JButton botaoVenda_adicionarDindin;
    private javax.swing.JButton botaoVenda_cancelarVenda;
    private javax.swing.JButton botaoVenda_executarVenda;
    private javax.swing.JButton botaoVenda_removerDindin;
    private javax.swing.JTextField campoEstoque_sabor;
    private javax.swing.JComboBox<String> comboVenda_saborDindin;
    private javax.swing.JMenuItem itemMenu_estoque;
    private javax.swing.JMenuItem itemMenu_historico;
    private javax.swing.JMenuItem itemMenu_venda;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelVenda_valorTotal;
    private javax.swing.JMenuBar menuBarra;
    private javax.swing.JMenu menu_telas;
    private javax.swing.JPanel painel_botoesDindin;
    private javax.swing.JPanel painel_botoesHistorico;
    private javax.swing.JPanel painel_estoque;
    private javax.swing.JPanel painel_formDindin;
    private javax.swing.JPanel painel_formSaborVenda;
    private javax.swing.JPanel painel_fundo;
    private javax.swing.JPanel painel_historico;
    private javax.swing.JPanel painel_venda;
    private javax.swing.JSpinner spinnerEstoque_custo;
    private javax.swing.JSpinner spinnerEstoque_quantidade;
    private javax.swing.JSpinner spinnerEstoque_valor;
    private javax.swing.JSpinner spinnerVenda_desconto;
    private javax.swing.JSpinner spinnerVenda_quantidadeSabor;
    private javax.swing.JTable tabelaEstoque_estoqueDindins;
    private javax.swing.JTable tabelaHistorico_historicoVendas;
    private javax.swing.JTable tabelaVenda_dindinsSelecionados;
    // End of variables declaration//GEN-END:variables
}
